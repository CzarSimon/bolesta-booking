networks:
  application-network:
    name: application-network
  monitoring-network:
    name: monitoring-network


volumes:
  backend-db:


services:
  backend:
    image: ghcr.io/czarsimon/bolesta-booking/backend:3.2.0
    volumes:
      - backend-db:/var/bolesta-booking
    environment:
      - DB_FILENAME=/var/bolesta-booking/db.sql
      - ENABLE_CREATE_USERS=false
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - application-network
      - monitoring-network
    ports:
      - "8080:8080"

  httplogger:
    image: czarsimon/httplogger:1.0.0
    environment:
      JAEGER_DISABLED: "true"
    networks:
      - monitoring-network
    ports:
      - "8081:8080"

  litestream:
    image: ghcr.io/czarsimon/bolesta-booking/litestream:1.0.0 #ignore-scanning
    environment:
      - AWS_ACCESS_KEY_ID=${LITESTREAM_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${LITESTREAM_ACCESS_KEY_SECRET}
    volumes:
      - backend-db:/var/bolesta-booking
    command: replicate

  dockmon:
    image: ghcr.io/czarsimon/bolesta-booking/dockmon:1.0.0 #ignore-scanning
    environment:
      - DOCKMON_USERNAME=${DOCKMON_USERNAME}
      - DOCKMON_PASSWORD=${DOCKMON_PASSWORD}
    networks:
      - monitoring-network
    ports:
      - "7777:7777"
    command: -storage memory
