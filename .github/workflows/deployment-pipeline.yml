name: deployment-pipeline

defaults:
  run:
    working-directory: infrastructure

on:
  push:
    paths:
      - infrastructure/docker-compose.yml
      - infrastructure/nginx.conf
      - .github/workflows/deployment-pipeline.yml

env:
  SERVER_HOST: booking.xn--blesta-wxa.se
  AWS_ACCESS_KEY_ID: ${{ secrets.SCW_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.SCW_SECRET_KEY }}
  AWS_DEFAULT_REGION: fr-par

jobs:
  security-scan:
    name: security-scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: setup trivy
        run: |
          wget https://github.com/aquasecurity/trivy/releases/download/v0.18.3/trivy_0.18.3_Linux-64bit.deb
          sudo dpkg -i trivy_0.18.3_Linux-64bit.deb
      - name: scan deployment images
        run: |
          for IMAGE in $(cat docker-compose.yml | grep 'image: ' | awk '{print $NF}'); do echo $IMAGE; trivy image --ignore-unfixed --exit-code 1 $IMAGE; done;

  build-and-upload-frontend:
    name: build-and-upload-frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 16.16.0
      - name: install dependencies
        run: npm ci
        working-directory: frontend
      - name: build application
        run: npm run build
        working-directory: frontend

  rsync-deployment-files:
    name: rsync-deployment-files
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs:
      - security-scan
    steps:
      - uses: actions/checkout@v2
      - name: upload compose file
        uses: burnett01/rsync-deployments@5.2.1
        with:
          path: "./infrastructure/docker-compose.yml"
          remote_path: /home/cicd
          remote_host: ${{ env.SERVER_HOST }}
          remote_user: cicd
          remote_key: ${{ secrets.CICD_SSH_PRIVATE_KEY }}
      - name: upload nginx config
        uses: burnett01/rsync-deployments@5.2.1
        with:
          path: "./infrastructure/nginx.conf"
          remote_path: /home/cicd
          remote_host: ${{ env.SERVER_HOST }}
          remote_user: cicd
          remote_key: ${{ secrets.CICD_SSH_PRIVATE_KEY }}

  start-containers:
    name: start-containers
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs:
      - rsync-deployment-files
    steps:
      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ env.SERVER_HOST }}
          username: cicd
          key: ${{ secrets.CICD_SSH_PRIVATE_KEY }}
          script: |
            docker-compose pull
            docker-compose up -d
